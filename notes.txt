commands

touch "filename.filetype" = create a new file
git add filename.filetype = add to repo
git commit -m "comment / notes" = commit to repo
git log = see recent commits
git diff = compare different versions
git push -u origin main
git push -u origin main
git diff --staged 'filename' = specific file, compare versions from latest commit to staged

RESTORING
git revert 
    - reinstates previous versions and makes a commit
    - restores all files updated in the given commit
    - HEAD, HEAD~1 etc
    - hash1, hash2
    - avoid opening the text editorr
        - git revert --no-edit HEAD
    - revert without committing (bring files into the staging area)
        - git revert -n HEAD
TO REVERT A SINGLE FILE 
    - git checkout
    - git checkout HEAD~1 -- report.md
UNSTAGING A SINGLE FILE
    - git restore --staged summary_statistics.csv
UNSTAGING ALL FILES
    - git restore --staged

git commits have 3 parts
1. commit
    - contains the metadata - author, log message,  commit time
2. tree
    - tracks the names and locations of files and directories in the repo
    - mapping keys to files/directories
3. blob
    - binary large object
    - may contain data of any kind
    - compressed snapshot of a file's content

GIT LOG
- can restrict or put conditions which log you want to see
    ex. git log "readme.md"
        git log -2 readme.md -> two recent commits
        git log --since='Month Day Year' -> customizing date range
        git log --since='Month Day Year' --until='Month Day Year' -> customizing date range
            recommended: YYYY-MM-DD, can use: "2 years ago", "yesterday"